"use client";
import React from "react";
import dynamic from "next/dynamic";

const World = dynamic(() => import("../ui/Globe").then((m) => m.World), {
  ssr: false,
});

export function GlobeDemo() {
  /* ----------------------------------------------------------------------- */

  const colors = ["#1e40af", "#7c3aed", "#0891b2"];

  const myCountry = {
    name: "Vietnam",
    //
    territorialColor: "rgba(255, 193, 7, 0.9)",
    colorArc: "rgba(239, 68, 68, 0.9)",
    //
    //! VI·ªÜT NAM (Tp.HCM) = { lat: 10.7626, lng: 106.6601 }
    lat: 10.7626,
    lng: 106.6601,
    //
    //! Gi√° tr·ªã "b√π" ƒë·ªÉ ƒëi·ªÅu ch·ªânh h∆∞·ªõng g√≥c nh√¨n "t·ªça ƒë·ªô" ban ƒë·∫ßu b·∫°n mu·ªën tr√™n GLOBE
    offsetLat: 17.1889, // B√π th√™m (Vƒ© ƒë·ªô) = xoay tr·ª•c X
    offsetLng: 0, // B√π th√™m (Kinh ƒë·ªô) = xoay tr·ª•c Y
  };

  //! ƒê√¢y l√† m·ªôt object c·∫•u h√¨nh ch·ª©a c√°c thu·ªôc t√≠nh ƒë·ªÉ t√πy ch·ªânh giao di·ªán v√† h√†nh vi c·ªßa GLOBE 3D
  // pointSize : Ki·ªÉm so√°t ƒë·ªô l·ªõn c·ªßa c√°c POINT ƒë√°nh d·∫•u v·ªã tr√≠ k·∫øt n·ªëi tr√™n GLOBE (gi√° tr·ªã m·∫∑c ƒë·ªãnh = 1)
  //
  // C√ÅC THU·ªòC T√çNH GIAO DI·ªÜN
  // globeColor         : M√†u ch√≠nh c·ªßa GLOBE
  // showAtmosphere     : Hi·ªÉn th·ªã l·ªõp kh√≠ quy·ªÉn xung quanh GLOBE
  // atmosphereColor    : M√†u c·ªßa l·ªõp kh√≠ quy·ªÉn
  // atmosphereAltitude : ƒê·ªô cao c·ªßa l·ªõp kh√≠ quy·ªÉn
  // emissive           : M√†u ph√°t s√°ng c·ªßa GLOBE
  // emissiveIntensity  : C∆∞·ªùng ƒë·ªô ph√°t s√°ng c·ªßa GLOBE
  // shininess          : ƒê·ªô b√≥ng c·ªßa b·ªÅ m·∫∑t GLOBE
  // polygonColor       : M√†u c·ªßa c√°c ƒëa gi√°c (qu·ªëc gia) tr√™n GLOBE
  //
  // C√ÅC THU·ªòC T√çNH √ÅNH S√ÅNG
  // ambientLight         : M√†u c·ªßa √°nh s√°ng m√¥i tr∆∞·ªùng
  // directionalLeftLight : M√†u c·ªßa √°nh s√°ng ƒëi t·ª´ tr√°i sang ph·∫£i
  // directionalTopLight  : M√†u c·ªßa √°nh s√°ng ƒëi t·ª´ tr√™n xu·ªëng d∆∞·ªõi
  // pointLight           : M√†u c·ªßa √°nh s√°ng c√°c POINT
  //
  // C√ÅC THU·ªòC T√çNH HO·∫†T ·∫¢NH
  // arcTime   : Th·ªùi gian di chuy·ªÉn c·ªßa c√°c ARC (ƒë∆°n v·ªã ms)
  // arcLength : ƒê·ªô d√†i c·ªßa c√°c ARC (ƒë∆°n v·ªã [%], t·ª´ 0.0 ƒë·∫øn 1.0)
  // rings     : S·ªë l∆∞·ª£ng v√≤ng tr√≤n hi·ªáu ·ª©ng
  // maxRings  : S·ªë l∆∞·ª£ng v√≤ng tr√≤n t·ªëi ƒëa
  //
  // (lat)           : Vƒ® ƒê·ªò - Latitude
  // (lng)           : KINH ƒê·ªò - Longitude
  // initialPosition : V·ªã tr√≠ ban ƒë·∫ßu c·ªßa GLOBE
  // autoRotate      : B·∫≠t/t·∫Øt t·ª± ƒë·ªông xoay GLOBE
  // autoRotateSpeed : T·ªëc ƒë·ªô t·ª± ƒë·ªông xoay GLOBE t·ª± ƒë·ªông (+/- xoay thu·∫≠n/ng∆∞·ª£c chi·ªÅu kim ƒë·ªìng h·ªì)
  const globeConfig = {
    pointSize: 4,

    // üåç GLOBE
    globeColor: "#2a4a6b",
    emissive: "#4a5568",
    emissiveIntensity: 0.4,
    shininess: 1.0,

    // üåü ATMOSPHERE - Halo s√°ng xung quanh globe
    showAtmosphere: true,
    atmosphereColor: "#63b3ed",
    atmosphereAltitude: 0.2,

    // üó∫Ô∏è COUNTRIES - M√†u l√£nh th·ªï m·∫∑c ƒë·ªãnh
    polygonColor: "rgba(226, 232, 240, 0.4)",

    //! üî¥ NATION - M√†u l√£nh th·ªï ri√™ng n·ªïi b·∫≠t
    countryColor: myCountry.territorialColor,
    countryName: myCountry.name,

    // üí° LIGHTING - √Ånh s√°ng t·ªëi ∆∞u cho n·ªÅn t·ªëi
    ambientLight: "#4299e1",
    directionalLeftLight: "#e2e8f0",
    directionalTopLight: "#f7fafc",
    pointLight: "#fbb6ce",

    // ‚ö° ANIMATION
    arcTime: 1000,
    arcLength: 0.9,
    rings: 1,
    maxRings: 3,
    initialPosition: {
      lat: myCountry.lat,
      lng: myCountry.lng,
      offsetLat: myCountry.offsetLat,
      offsetLng: myCountry.offsetLng,
    },
    autoRotate: true,
    autoRotateSpeed: 0.1,

    //! üíÄ ƒê√°nh ƒë·ªïi gi·ªØa HI·ªÜU SU·∫§T v√† HI·ªÇN TH·ªä
    //
    // Ki·ªÉm so√°t ƒë·ªô chi ti·∫øt c·ªßa c√°c ƒëa gi√°c qu·ªëc gia tr√™n GLOBE ... m·∫∑c ƒë·ªãnh l√† (3):
    //
    // Gi√° tr·ªã th·∫•p (0-2): ƒêa gi√°c ƒë∆°n gi·∫£n h∆°n, √≠t chi ti·∫øt h√¨nh d·∫°ng
    // Gi√° tr·ªã v·ª´a (3-5): ƒêa gi√°c c√¢n b·∫±ng gi·ªØa hi·ªáu su·∫•t v√† chi ti·∫øt
    // Gi√° tr·ªã cao (6+): ƒêa gi√°c r·∫•t chi ti·∫øt, s√°t v·ªõi h√¨nh d·∫°ng th·ª±c t·∫ø
    polygonResolution: 4,
    //
    // Ki·ªÉm so√°t kho·∫£ng c√°ch gi·ªØa c√°c qu·ªëc gia tr√™n GLOBE ... m·∫∑c ƒë·ªãnh l√† (0.7):
    //
    // 0.0: C√°c qu·ªëc gia s√°t nhau, kh√¥ng c√≥ kho·∫£ng tr·ªëng
    // 0.5: Kho·∫£ng c√°ch v·ª´a ph·∫£i gi·ªØa c√°c qu·ªëc gia
    // 0.7: Kho·∫£ng c√°ch r√µ r√†ng gi·ªØa c√°c qu·ªëc gia (hi·ªán t·∫°i)
    // 1.0: Kho·∫£ng c√°ch r·∫•t l·ªõn, c√°c qu·ªëc gia t√°ch bi·ªát ho√†n to√†n
    polygonMargin: 0,
    //
    // Thi·∫øt ƒë·∫∑t b√°n k√≠nh POINT ... m·∫∑c ƒë·ªãnh l√† (2):
    pointRadius: 1,
  };

  //! ƒê√¢y l√† m·ªôt m·∫£ng ch·ª©a d·ªØ li·ªáu v·ªÅ c√°c ƒë∆∞·ªùng cong (ARCS) k·∫øt n·ªëi gi·ªØa c√°c ƒëi·ªÉm tr√™n GLOBE
  //  order              : Th·ª© t·ª± hi·ªÉn th·ªã c·ªßa ARC
  //  startLat, startLng : T·ªça ƒë·ªô ƒëi·ªÉm b·∫Øt ƒë·∫ßu (vƒ© ƒë·ªô, kinh ƒë·ªô)
  //  endLat, endLng     : T·ªça ƒë·ªô ƒëi·ªÉm k·∫øt th√∫c (vƒ© ƒë·ªô, kinh ƒë·ªô)
  //  arcAlt             : ƒê·ªô cao c·ªßa ARC (t·ª´ 0.1 ƒë·∫øn 0.7)
  //  color              : M√†u s·∫Øc c·ªßa ARC
  const sampleArcs = [
    {
      order: 1,
      startLat: -19.885592, // Belo Horizonte, Brazil
      startLng: -43.951191,
      endLat: -22.9068, // Rio de Janeiro, Brazil
      endLng: -43.1729,
      arcAlt: 0.1,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 1,
      startLat: 28.6139, // New Delhi, India
      startLng: 77.209,
      endLat: 3.139, // Kuala Lumpur, Malaysia
      endLng: 101.6869,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 1,
      startLat: -19.885592, // Belo Horizonte, Brazil
      startLng: -43.951191,
      endLat: -1.303396, // Nairobi, Kenya
      endLng: 36.852443,
      arcAlt: 0.5,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 2,
      startLat: 1.3521, // Singapore, Singapore
      startLng: 103.8198,
      endLat: 35.6762, // Tokyo, Japan
      endLng: 139.6503,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 2,
      startLat: 51.5072, // London, United Kingdom
      startLng: -0.1276,
      endLat: 3.139, // Kuala Lumpur, Malaysia
      endLng: 101.6869,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 2,
      startLat: -15.785493, // Bras√≠lia, Brazil
      startLng: -47.909029,
      endLat: 36.162809, // Las Vegas, USA
      endLng: -115.119411,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 3,
      startLat: -33.8688, // Sydney, Australia
      startLng: 151.2093,
      endLat: 22.3193, // H·ªìng K√¥ng (Hong Kong)
      endLng: 114.1694,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 3,
      startLat: 21.3099, // Honolulu, USA
      startLng: -157.8581,
      endLat: 40.7128, // New York City, USA
      endLng: -74.006,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 3,
      startLat: -6.2088, // Jakarta, Indonesia
      startLng: 106.8456,
      endLat: 51.5072, // London, United Kingdom
      endLng: -0.1276,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 4,
      startLat: 11.986597, // Abuja, Nigeria
      startLng: 8.571831,
      endLat: -15.595412, // Cuiab√°, Brazil
      endLng: -56.05918,
      arcAlt: 0.5,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 4,
      startLat: -34.6037, // Buenos Aires, Argentina
      startLng: -58.3816,
      endLat: 22.3193, // H·ªìng K√¥ng (Hong Kong)
      endLng: 114.1694,
      arcAlt: 0.7,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 4,
      startLat: 51.5072, // London, United Kingdom
      startLng: -0.1276,
      endLat: 48.8566, // Paris, France
      endLng: -2.3522,
      arcAlt: 0.1,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 5,
      startLat: 14.5995, // Manila, Philippines
      startLng: 120.9842,
      endLat: 51.5072, // London, United Kingdom
      endLng: -0.1276,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 5,
      startLat: 1.3521, // Singapore, Singapore
      startLng: 103.8198,
      endLat: -33.8688, // Sydney, Australia
      endLng: 151.2093,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 5,
      startLat: 34.0522, // Los Angeles, USA
      startLng: -118.2437,
      endLat: 48.8566, // Paris, France
      endLng: -2.3522,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 6,
      startLat: -15.432563, // Lusaka, Zambia
      startLng: 28.315853,
      endLat: 1.094136, // Georgetown, Guyana
      endLng: -63.34546,
      arcAlt: 0.7,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 6,
      startLat: 37.5665, // Seoul, South Korea
      startLng: 126.978,
      endLat: 35.6762, // Tokyo, Japan
      endLng: 139.6503,
      arcAlt: 0.1,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 6,
      startLat: 22.3193, // H·ªìng K√¥ng (Hong Kong)
      startLng: 114.1694,
      endLat: 51.5072, // London, United Kingdom
      endLng: -0.1276,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 7,
      startLat: -19.885592, // Belo Horizonte, Brazil
      startLng: -43.951191,
      endLat: -15.595412, // Cuiab√°, Brazil
      endLng: -56.05918,
      arcAlt: 0.1,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 7,
      startLat: 48.8566, // Paris, France
      startLng: -2.3522,
      endLat: 52.52, // Berlin, Germany
      endLng: 13.405,
      arcAlt: 0.1,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 7,
      startLat: 52.52, // Berlin, Germany
      startLng: 13.405,
      endLat: 34.0522, // Los Angeles, USA
      endLng: -118.2437,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 8,
      startLat: -8.833221, // Luanda, Angola
      startLng: 13.264837,
      endLat: -33.936138, // Cape Town, South Africa
      endLng: 18.436529,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 8,
      startLat: 49.2827, // Vancouver, Canada
      startLng: -123.1207,
      endLat: 52.3676, // Amsterdam, Netherlands
      endLng: 4.9041,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 8,
      startLat: 1.3521, // Singapore, Singapore
      startLng: 103.8198,
      endLat: 40.7128, // New York City, USA
      endLng: -74.006,
      arcAlt: 0.5,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 9,
      startLat: 51.5072, // London, United Kingdom
      startLng: -0.1276,
      endLat: 34.0522, // Los Angeles, USA
      endLng: -118.2437,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 9,
      startLat: 22.3193, // H·ªìng K√¥ng (Hong Kong)
      startLng: 114.1694,
      endLat: -22.9068, // Rio de Janeiro, Brazil
      endLng: -43.1729,
      arcAlt: 0.7,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 9,
      startLat: 1.3521, // Singapore, Singapore
      startLng: 103.8198,
      endLat: -34.6037, // Buenos Aires, Argentina
      endLng: -58.3816,
      arcAlt: 0.5,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 10,
      startLat: -22.9068, // Rio de Janeiro, Brazil
      startLng: -43.1729,
      endLat: 28.6139, // New Delhi, India
      endLng: 77.209,
      arcAlt: 0.7,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 10,
      startLat: 34.0522, // Los Angeles, USA
      startLng: -118.2437,
      endLat: 31.2304, // Shanghai, China
      endLng: 121.4737,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 10,
      startLat: -6.2088, // Jakarta, Indonesia
      startLng: 106.8456,
      endLat: 52.3676, // Amsterdam, Netherlands
      endLng: 4.9041,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 11,
      startLat: 41.9028, // Rome, Italy
      startLng: 12.4964,
      endLat: 34.0522, // Los Angeles, USA
      endLng: -118.2437,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 11,
      startLat: -6.2088, // Jakarta, Indonesia
      startLng: 106.8456,
      endLat: 31.2304, // Shanghai, China
      endLng: 121.4737,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 11,
      startLat: 22.3193, // H·ªìng K√¥ng (Hong Kong)
      startLng: 114.1694,
      endLat: 1.3521, // Singapore, Singapore
      endLng: 103.8198,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 12,
      startLat: 34.0522, // Los Angeles, USA
      startLng: -118.2437,
      endLat: 37.7749, // San Francisco, USA
      endLng: -122.4194,
      arcAlt: 0.1,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 12,
      startLat: 35.6762, // Tokyo, Japan
      startLng: 139.6503,
      endLat: 22.3193, // H·ªìng K√¥ng (Hong Kong)
      endLng: 114.1694,
      arcAlt: 0.2,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 12,
      startLat: 22.3193, // H·ªìng K√¥ng (Hong Kong)
      startLng: 114.1694,
      endLat: 34.0522, // Los Angeles, USA
      endLng: -118.2437,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 13,
      startLat: 52.52, // Berlin, Germany
      startLng: 13.405,
      endLat: 22.3193, // H·ªìng K√¥ng (Hong Kong)
      endLng: 114.1694,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 13,
      startLat: 11.986597, // Abuja, Nigeria
      startLng: 8.571831,
      endLat: 35.6762, // Tokyo, Japan
      endLng: 139.6503,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 13,
      startLat: -22.9068, // Rio de Janeiro, Brazil
      startLng: -43.1729,
      endLat: -34.6037, // Buenos Aires, Argentina
      endLng: -58.3816,
      arcAlt: 0.1,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },
    {
      order: 14,
      startLat: -33.936138, // Cape Town, South Africa
      startLng: 18.436529,
      endLat: 21.395643, // Mecca, Saudi Arabia
      endLng: 39.883798,
      arcAlt: 0.3,
      color: colors[Math.floor(Math.random() * (colors.length - 1))],
    },

    //! Th√™m cho VN
    {
      order: 15,
      startLat: 10.7626, // Ho Chi Minh City, Vietnam
      startLng: 106.6601,
      endLat: 42.9634, // Kentwood, USA
      endLng: -85.6447,
      arcAlt: 0.6,
      color: myCountry.colorArc,
    },
    {
      order: 14,
      startLat: 10.7626, // Ho Chi Minh City, Vietnam
      startLng: 106.6601,
      endLat: -37.8136, // Melbourne, Australia
      endLng: 144.9631,
      arcAlt: 0.4,
      color: myCountry.colorArc,
    },
    {
      order: 13,
      startLat: 1.3521, // Singapore, Singapore
      startLng: 103.8198,
      endLat: 10.7626, // Ho Chi Minh City, Vietnam
      endLng: 106.6601,
      arcAlt: 0.2,
      color: myCountry.colorArc,
    },
    {
      order: 12,
      startLat: 36.7503, // Takaoka, Japan
      startLng: 137.0147,
      endLat: 10.7626, // Ho Chi Minh City, Vietnam
      endLng: 106.6601,
      arcAlt: 0.3,
      color: myCountry.colorArc,
    },
    {
      order: 11,
      startLat: 10.7626, // Ho Chi Minh City, Vietnam
      startLng: 106.6601,
      endLat: 1.3521, // Singapore, Singapore
      endLng: 103.8198,
      arcAlt: 0.2,
      color: myCountry.colorArc,
    },
    {
      order: 10,
      startLat: 10.7626, // Ho Chi Minh City, Vietnam
      startLng: 106.6601,
      endLat: 36.7503, // Takaoka, Japan
      endLng: 137.0147,
      arcAlt: 0.3,
      color: myCountry.colorArc,
    },
    {
      order: 9,
      startLat: 10.7626, // Ho Chi Minh City, Vietnam
      startLng: 106.6601,
      endLat: 40.7128, // New York City, USA
      endLng: -74.006,
      arcAlt: 0.7,
      color: myCountry.colorArc,
    },
    {
      order: 8,
      startLat: 10.7626, // Ho Chi Minh City, Vietnam
      startLng: 106.6601,
      endLat: 37.5665, // Seoul, South Korea
      endLng: 126.978,
      arcAlt: 0.3,
      color: myCountry.colorArc,
    },
    {
      order: 7,
      startLat: 48.8566, // Paris, France
      startLng: 2.3522,
      endLat: 10.7626, // Ho Chi Minh City, Vietnam
      endLng: 106.6601,
      arcAlt: 0.6,
      color: myCountry.colorArc,
    },
    {
      order: 6,
      startLat: 52.52, // Berlin, Germany
      startLng: 13.405,
      endLat: 10.7626, // Ho Chi Minh City, Vietnam
      endLng: 106.6601,
      arcAlt: 0.5,
      color: myCountry.colorArc,
    },
    {
      order: 5,
      startLat: 10.7626, // Ho Chi Minh City, Vietnam
      startLng: 106.6601,
      endLat: 43.6532, // Toronto, Canada
      endLng: -79.3832,
      arcAlt: 0.6,
      color: myCountry.colorArc,
    },
    {
      order: 4,
      startLat: 51.5072, // London, United Kingdom
      startLng: -0.1276,
      endLat: 10.7626, // Ho Chi Minh City, Vietnam
      endLng: 106.6601,
      arcAlt: 0.6,
      color: myCountry.colorArc,
    },
    {
      order: 3,
      startLat: 10.7626, // Ho Chi Minh City, Vietnam
      startLng: 106.6601,
      endLat: 34.0522, // Los Angeles, USA
      endLng: -118.2437,
      arcAlt: 0.7,
      color: myCountry.colorArc,
    },
    {
      order: 2,
      startLat: 10.7626, // Ho Chi Minh City, Vietnam
      startLng: 106.6601,
      endLat: 45.5017, // Montreal, Canada
      endLng: -73.5673,
      arcAlt: 0.7,
      color: myCountry.colorArc,
    },
    {
      order: 1,
      startLat: 10.7626, // Ho Chi Minh City, Vietnam
      startLng: 106.6601,
      endLat: 21.0285, // Hanoi, Vietnam
      endLng: 105.8542,
      arcAlt: 0.1,
      color: myCountry.colorArc,
    },
  ];

  /* ----------------------------------------------------------------------- */

  return (
    <div className="absolute w-full h-full flex items-center justify-center">
      <World data={sampleArcs} globeConfig={globeConfig} />
    </div>
  );
}
